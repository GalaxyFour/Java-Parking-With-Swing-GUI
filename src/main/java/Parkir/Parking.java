/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Parkir;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.JFrame;
/**
 *
 * @author Hp
 */
public class Parking extends javax.swing.JFrame {
    DefaultTableModel tabModel;
    JFrame frame = new JFrame();  

    public Parking() {
        initComponents();
        tblParkir.setColumnSelectionAllowed(true);
        formWindowOpened();

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHeader = new javax.swing.JLabel();
        jLabelKodeProduk = new javax.swing.JLabel();
        txtNoPol = new javax.swing.JTextField();
        jLabelNama = new javax.swing.JLabel();
        jLabelSatuan = new javax.swing.JLabel();
        cmbKendaraan = new javax.swing.JComboBox();
        jLabelHarga = new javax.swing.JLabel();
        txtBiaya = new javax.swing.JTextField();
        jLabelStok = new javax.swing.JLabel();
        txtLama = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblParkir = new javax.swing.JTable();
        txtTglMasuk = new javax.swing.JFormattedTextField();
        txtJamMasuk = new javax.swing.JFormattedTextField();
        jLabelNama1 = new javax.swing.JLabel();
        txtTglKeluar = new javax.swing.JFormattedTextField();
        txtJamKeluar = new javax.swing.JFormattedTextField();
        jLabelStok1 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnTglKeluar = new javax.swing.JButton();
        btnTglMasuk = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelHeader.setBackground(new java.awt.Color(0, 0, 51));
        jLabelHeader.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelHeader.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeader.setText("Data Parkir");
        jLabelHeader.setOpaque(true);

        jLabelKodeProduk.setText("No. Polisi");

        jLabelNama.setText("Tanggal Masuk");

        jLabelSatuan.setText("Jenis Kendaraan");

        cmbKendaraan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mobil", "Motor" }));
        cmbKendaraan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jenisKendaraanChanged(evt);
            }
        });
        cmbKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKendaraanActionPerformed(evt);
            }
        });

        jLabelHarga.setText("Biaya per Jam");

        txtBiaya.setEditable(false);
        txtBiaya.setText("3000");

        jLabelStok.setText("Lama");

        txtLama.setEditable(false);
        txtLama.setText("0");

        btnAdd.setText("Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        tblParkir.setAutoCreateRowSorter(true);
        tblParkir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "No. Polisi", "Jenis Kendaraan", "Tanggal Masuk", "Tanggal Keluar", "Biaya per Jam", "Lama", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblParkir.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblParkir.setShowGrid(true);
        tblParkir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblParkirMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblParkir);

        txtTglMasuk.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtTglMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        txtTglMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglMasukActionPerformed(evt);
            }
        });

        txtJamMasuk.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm:dd"))));
        txtJamMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));

        jLabelNama1.setText("Tanggal Keluar");

        txtTglKeluar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtTglKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglKeluarActionPerformed(evt);
            }
        });

        txtJamKeluar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm:ss "))));

        jLabelStok1.setText("Total ");

        txtTotal.setEditable(false);
        txtTotal.setText("0");

        btnTglKeluar.setText("...");
        btnTglKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTglKeluarActionPerformed(evt);
            }
        });

        btnTglMasuk.setText("...");
        btnTglMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTglMasukActionPerformed(evt);
            }
        });

        lblId.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelHarga)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelSatuan)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelStok)
                                                .addGap(74, 74, 74)
                                                .addComponent(txtLama, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelStok1)
                                                .addGap(74, 74, 74)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(btnAdd)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btnSave)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnCancel))
                                                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelKodeProduk)
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbKendaraan, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNoPol)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelNama)
                                            .addComponent(jLabelNama1))
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtBiaya, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtTglKeluar)
                                                    .addComponent(txtTglMasuk))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtJamKeluar)
                                                    .addComponent(txtJamMasuk, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(btnTglKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnTglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblId)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(lblId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNoPol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelKodeProduk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbKendaraan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSatuan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNama)
                            .addComponent(txtTglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTglMasuk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNama1)
                            .addComponent(txtTglKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJamKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTglKeluar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelHarga))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelStok))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelStok1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnCancel))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        BersihData();
        setinsertOn();
        setBtnInsert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            saveData();
            saveTable();
            setinsertOn();
            setBtnInsert();
            BersihData();
        } catch (Exception ex) {}
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            updateData();
            saveTable();
            setinsertOn();
            setBtnInsert();
            BersihData();
        } catch (Exception ex) {}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
                deleteData();
                saveTable();
                setBtnInsert();
                setinsertOn();
                BersihData();
        } catch (Exception ex) {}
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        BersihData();
        setinsertOn();
        setBtnInsert();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tblParkirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblParkirMouseClicked
        // TODO add your handling code here:
        
        seteditOn();
        tblKeForm();
    }//GEN-LAST:event_tblParkirMouseClicked

    private void btnTglKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTglKeluarActionPerformed
        // TODO add your handling code here:
        txtTglKeluar.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        txtJamKeluar.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));
        try {
            updateLama();
        } catch (Exception ex) {}
    }//GEN-LAST:event_btnTglKeluarActionPerformed

    private void txtTglMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglMasukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglMasukActionPerformed

    private void cmbKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKendaraanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKendaraanActionPerformed

    private void jenisKendaraanChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jenisKendaraanChanged
        // TODO add your handling code here:
        if(cmbKendaraan.getSelectedItem() == "Motor"){
            txtBiaya.setText("2000");
        }else{
            txtBiaya.setText("3000");
        }
    }//GEN-LAST:event_jenisKendaraanChanged

    private void txtTglKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglKeluarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglKeluarActionPerformed

    private void btnTglMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTglMasukActionPerformed
        // TODO add your handling code here:
        txtTglMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        txtJamMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));
    }//GEN-LAST:event_btnTglMasukActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parking().setVisible(true);
            }
        });
    }
    public void saveTable()throws Exception
    {
      File file = new File("Data.txt");
      boolean result = Files.deleteIfExists(file.toPath());
      BufferedWriter bfw = new BufferedWriter(new FileWriter("Data.txt"));

        for (int row = 0; row < tblParkir.getRowCount(); row++) {
            if(row>0){
            bfw.newLine();
            }
            for (int col = 0; col < tblParkir.getColumnCount(); col++) {
                if(col==0)
                {
                bfw.write(String.valueOf((Integer)(tblParkir.getValueAt(row, col))));
                }else{
                bfw.write((String)(tblParkir.getValueAt(row, col)));
                }
                bfw.write("\t");;
            }
        }
        
        bfw.close();
    }
    private void formWindowOpened() {
        String line = null;
        DefaultTableModel dtm = (DefaultTableModel) tblParkir.getModel();

        try {
            BufferedReader br = new BufferedReader(new FileReader("Data.txt"));

            while ((line = br.readLine()) != null) {
                Vector data = new Vector();// this is important
                StringTokenizer st1 = new StringTokenizer(line, "\t");
                int i = 0;
                while (st1.hasMoreTokens()) {
                    String nextToken = st1.nextToken();
                    if(i==0){
                    data.add(Integer.parseInt(nextToken));
                    }else{
                    data.add(nextToken);
                    }
                    System.out.println(nextToken);
                    i++;

                }
                dtm.addRow(data);//add here 
            }

            br.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
    public void updateLama()throws Exception
    {
        if(!"".equals(txtTglKeluar.getText()) && !"".equals(txtJamKeluar.getText())){
            SimpleDateFormat formatter1=new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
            Date tglMasuk = formatter1.parse(txtTglMasuk.getText() + " " + txtJamMasuk.getText());
            Date tglKeluar = formatter1.parse(txtTglKeluar.getText() + " " + txtJamKeluar.getText());
            
            long diff = tglKeluar.getTime() - tglMasuk.getTime();
            long diffHours = diff / (60 * 60 * 1000);
            diffHours++;
            if(diff<1){
                txtLama.setText("0");
                txtTotal.setText("0");
                JOptionPane.showMessageDialog(frame,
                "Tanggal Masuk harus lebih Kecil dari Tanggal Keluar.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            }else{
                txtLama.setText(String.valueOf(diffHours));
                int xz = Math.toIntExact(diffHours) * Integer.parseInt(txtBiaya.getText());
                txtTotal.setText(String.valueOf(xz));
            }
        }
    }
    
    private void saveData(){
        DefaultTableModel model = (DefaultTableModel) tblParkir.getModel();
        
        int max2 = 0;
        for(int i = 0; i < tblParkir.getRowCount(); i++)
        {
          int val = Integer.parseInt(tblParkir.getValueAt(i, 0).toString());
          if(val > max2)
          {
              max2 = val;
          }
        }
        max2++;
        String tglMasuk = txtTglMasuk.getText() + " " + txtJamMasuk.getText();
        String tglKeluar = txtTglKeluar.getText() + " " + txtJamKeluar.getText();
        if(tglKeluar.equals(" ")){ tglKeluar = ""; }
        model.addRow(new Object[]{max2, txtNoPol.getText(), cmbKendaraan.getSelectedItem(), tglMasuk, tglKeluar, txtBiaya.getText(), txtLama.getText(), txtTotal.getText()});
        
                JOptionPane.showMessageDialog(frame,
                "Data Berhasil di Simpan.",
                "Info",
                JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void deleteData(){
        String searchedId = lblId.getText();//ID of the product to remove from the table
        int row = -1;//index of row or -1 if not found

        //search for the row based on the ID in the first column
        for(int i=0;i<tblParkir.getRowCount();++i){
            if(tblParkir.getValueAt(i, 0).equals(Integer.parseInt(searchedId)))
            {
                row = i;
                break;
            }
        }

        if(row != -1){
            tblParkir.remove(row);//remove row
        }
        
        JOptionPane.showMessageDialog(frame,
        "Data Berhasil di Hapus.",
        "Info",
        JOptionPane.INFORMATION_MESSAGE);
    }
    
    
    private void updateData(){
        String searchedId = lblId.getText();//ID of the product to remove from the table
        int row = -1;//index of row or -1 if not found

        //search for the row based on the ID in the first column
        for(int i=0;i<tblParkir.getRowCount();++i){
            if(tblParkir.getValueAt(i, 0).equals(Integer.parseInt(searchedId)))
            {
                row = i;
                break;
            }
        }

        if(row != -1){
            String JamKeluar = txtTglKeluar.getText() + " " + txtJamKeluar.getText();
            String Biaya = txtBiaya.getText();
            String Lama = txtLama.getText();
            String Total = txtTotal.getText();
            tblParkir.setValueAt(JamKeluar, row, 4);
            tblParkir.setValueAt(Biaya, row, 5);
            tblParkir.setValueAt(Lama, row, 6);
            tblParkir.setValueAt(Total, row, 7);
            
            
        }
        else{
//            JOptionPane.showMessageDialog(frame,
//            "Data Gagal di Perbarui.",
//            "Error",
//            JOptionPane.ERROR_MESSAGE);
        }
            JOptionPane.showMessageDialog(frame,
            "Data Berhasil di Perbarui.",
            "Info",
            JOptionPane.INFORMATION_MESSAGE);
        
    }
    
   private void BersihData(){
        lblId.setText("0");
        txtNoPol.setText("");
        cmbKendaraan.setSelectedIndex(0);
        txtTglMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        txtJamMasuk.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));
        txtTglKeluar.setText("");
        txtJamKeluar.setText("");
        txtBiaya.setText("3000");
        txtLama.setText("0");
        txtTotal.setText("0");
    } 
   
   private void SetEditOff2(){
        txtNoPol.setEnabled(false);
        cmbKendaraan.setEnabled(false);
        txtTglMasuk.setEnabled(false);
        txtJamMasuk.setEnabled(false);
        txtTglKeluar.setEnabled(false);
        txtJamKeluar.setEnabled(false);
        btnTglMasuk.setEnabled(false);
   }
   
   private void SetEditOff(){
        txtNoPol.setEnabled(false);
        cmbKendaraan.setEnabled(false);
        txtTglMasuk.setEnabled(false);
        txtJamMasuk.setEnabled(false);
        btnTglMasuk.setEnabled(false);
   }
   private void seteditOn(){
        txtNoPol.setEnabled(false);
        cmbKendaraan.setEnabled(false);
        txtTglMasuk.setEnabled(false);
        txtJamMasuk.setEnabled(false);
        txtTglKeluar.setEnabled(true);
        txtJamKeluar.setEnabled(true);
        btnTglMasuk.setEnabled(true);
   }
   private void setinsertOn(){
        txtNoPol.setEnabled(true);
        cmbKendaraan.setEnabled(true);
        txtTglMasuk.setEnabled(true);
        txtJamMasuk.setEnabled(true);
        txtTglKeluar.setEnabled(true);
        txtJamKeluar.setEnabled(true);
        btnTglMasuk.setEnabled(true);
   }
   
   private void setBtnEdit(){
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        btnCancel.setEnabled(true);
        btnSave.setEnabled(false);
   }
   private void setBtnInsert(){
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnCancel.setEnabled(false);
        btnSave.setEnabled(true);
   }
   
   void tblKeForm(){
       BersihData();
//        tblParkir.setModel(tabModel);
        lblId.setText(String.valueOf(((Integer) tblParkir.getValueAt(tblParkir.getSelectedRow(),0))));
        txtNoPol.setText((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),1));
        cmbKendaraan.setSelectedItem((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),2));
        if(!((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),3)).equals("")){
        txtTglMasuk.setText(((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),3)).substring(0,10));
        txtJamMasuk.setText(((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),3)).substring(11));
        }
        if(!((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),4)).equals("")){
        txtTglKeluar.setText(((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),4)).substring(0,10));
        txtJamKeluar.setText(((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),4)).substring(11));
        }
        txtBiaya.setText((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),5));
        txtLama.setText((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),6));
        txtTotal.setText((String) tblParkir.getValueAt(tblParkir.getSelectedRow(),7));
        
        setBtnEdit();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTglKeluar;
    private javax.swing.JButton btnTglMasuk;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbKendaraan;
    private javax.swing.JLabel jLabelHarga;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JLabel jLabelKodeProduk;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNama1;
    private javax.swing.JLabel jLabelSatuan;
    private javax.swing.JLabel jLabelStok;
    private javax.swing.JLabel jLabelStok1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JTable tblParkir;
    private javax.swing.JTextField txtBiaya;
    private javax.swing.JFormattedTextField txtJamKeluar;
    private javax.swing.JFormattedTextField txtJamMasuk;
    private javax.swing.JTextField txtLama;
    private javax.swing.JTextField txtNoPol;
    private javax.swing.JFormattedTextField txtTglKeluar;
    private javax.swing.JFormattedTextField txtTglMasuk;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
